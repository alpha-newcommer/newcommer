version: '3'

services:

  postgresql:
  
    image: docker.bintray.io/postgres:9.5.2
    container_name: postgresql
    networks:
      - sonarnet

    ports:
     - "5432:5432"

    environment:
     - POSTGRES_DB=postgres
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=password

    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  artifactory:

    image: docker.bintray.io/jfrog/artifactory-oss:5.9.0
    container_name: artifactory

    ports:
     - "8081:8081"

    depends_on:
     - postgresql

    links:
     - postgresql

    volumes:
     - ./artifactory/data:/artifactory/data
     - ./artifactory/logs:/artifactory/logs
     - ./artifactory/backup:/artifactory/backup

    environment:
     - DB_TYPE=postgresql
     - DB_USER=postgres
     - DB_PASSWORD=p0stgres

    restart: always

    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  gitbucket:

     # 2/26ではgitbucket 4
     image: takezoe/gitbucket
     ports:
      - "29418:29418"
      - "18080:8080"
     volumes:
      - ./gitbucket:/gitbucket

  jenkins:

    # 2/26ではjenkins 2.60.3
    image: jenkins:latest
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"

    volumes:
     - ./jenkins_home:/var/jenkins_home

    restart: always

# connection fail
#  sonarqube:
#
#    # 2/26ではsonarqube 7.0
#    image: sonarqube:latest
#    container_name: sonarqube
#    ports:
#      - "9000:9000"
#
#    environment:
#        - SONARQUBE_JDBC_USERNAME=sonar
#        - SONARQUBE_JDBC_PASSWORD=sonar
#        - SONARQUBE_JDBC_URL=jdbc:postgresql://10.66.176.21:5432/sonar
#
#    links:
#        - postgresql
#
#    volumes:
#      - ./sonarqube/data:/opt/sonarqube/data
#      - ./sonarqube/extensions:/opt/sonarqube/extensions
#
#    restart: always

networks:
  sonarnet:
    driver: bridge
